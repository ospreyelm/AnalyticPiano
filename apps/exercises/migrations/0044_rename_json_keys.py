# Generated by Django 2.2.28 on 2023-03-20 18:47

from django.db import migrations


# Renames attributes in PerformanceData's `data` field to more descriptive ones
def rename_keys(apps, schema_editor):
    PerformanceData = apps.get_model("exercises", "PerformanceData")
    db_alias = schema_editor.connection.alias
    pds = PerformanceData.objects.using(db_alias).all()
    for pd in pds:
        pd_data = pd.data
        for exercise_idx in range(len(pd_data)):
            ex_data = pd_data[exercise_idx]
            del ex_data["timezone"]
            ex_data["client_completion_date"] = ex_data.pop("time")
            ex_data["error_tally"] = ex_data.pop("exercise_error_tally")
            ex_data["performance_duration_in_seconds"] = ex_data.pop(
                "exercise_duration"
            )
            ex_data["tempo_mean_semibreves_per_min"] = ex_data.pop(
                "exercise_mean_tempo"
            )
            ex_data["tempo_rating"] = ex_data.pop("exercise_tempo_rating")
            ex_data["tempo_SD_semibreves_per_min"] = None
            ex_data["time_intervals_in_milliseconds"] = None
            pd_data[exercise_idx] = ex_data
        pd.data = pd_data

    PerformanceData.objects.using(db_alias).bulk_update(list(pds), ["data"])
    pass


def revert_keynames(apps, schema_editor):
    PerformanceData = apps.get_model("exercises", "PerformanceData")
    db_alias = schema_editor.connection.alias
    pds = PerformanceData.objects.using(db_alias).all()
    for pd in pds:
        pd_data = pd.data
        for exercise_idx in range(len(pd_data)):
            ex_data = pd_data[exercise_idx]
            ex_data["timezone"] = None
            ex_data["time"] = ex_data.pop("client_completion_date")
            ex_data["exercise_error_tally"] = ex_data.pop("error_tally")
            ex_data["exercise_duration"] = ex_data.pop(
                "performance_duration_in_seconds"
            )
            ex_data["exercise_mean_tempo"] = ex_data.pop(
                "tempo_mean_semibreves_per_min"
            )
            ex_data["exercise_tempo_rating"] = ex_data.pop("tempo_rating")
            del ex_data["tempo_SD_semibreves_per_min"]
            del ex_data["time_intervals_in_milliseconds"]
            pd_data[exercise_idx] = ex_data

        pd.data = pd_data

    PerformanceData.objects.using(db_alias).bulk_update(list(pds), ["data"])
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("exercises", "0043_auto_20230314_1028"),
    ]

    operations = [migrations.RunPython(rename_keys, reverse_code=revert_keynames)]
