# Generated by Django 2.2.28 on 2022-07-28 17:41
import re
import datetime
from django.db import migrations, models


def forwards(apps, schema_editor):
    Course = apps.get_model("exercises", "Course")
    Playlist = apps.get_model("exercises", "Playlist")
    for course in Course.objects.all():
        playlist_list = Playlist.objects.filter(id__in=re.split(r"[,; \n]+", course.playlists_string))
        publish_date_list = course.publish_dates.split(" ")
        due_date_list = course.due_dates.split(" ")
        for i in range(0, len(playlist_list)):
            playlist_list[i].publish_date = datetime.datetime.strptime(publish_date_list[i], "%Y-%m-%d")
            playlist_list[i].due_date = datetime.datetime.strptime(due_date_list[i], "%Y-%m-%d")
            playlist_list[i].save()
            course.playlists.add(playlist_list[i])
        course.save()


def reverse(apps, schema_editor):
    Course = apps.get_model("exercises", "Course")
    for course in Course.objects.all():
        for playlist in course.playlists.all():
            course.playlists_string = course.playlists_string + " " + playlist.id
            course.publish_dates = course.publish_dates + " " + str(playlist.publish_date)
            course.due_dates = course.due_dates + " " + str(playlist.due_date)
        course.save()


class Migration(migrations.Migration):

    dependencies = [
        ("exercises", "0022_course_visible_to"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="course",
            name="slug",
        ),
        migrations.AddField(
            model_name="playlist",
            name="due_date",
            field=models.DateTimeField(blank=True, default=None, null=True, verbose_name="Due Date"),
        ),
        migrations.AddField(
            model_name="playlist",
            name="publish_date",
            field=models.DateTimeField(blank=True, default=None, null=True, verbose_name="Publish Date"),
        ),
        migrations.RenameField(model_name="course", old_name="playlists", new_name="playlists_string"),
        migrations.AddField(
            model_name="course",
            name="playlists",
            field=models.ManyToManyField(
                blank=True,
                help_text="These are the exercise playlists within the course.",
                related_name="courses",
                to="exercises.Playlist",
            ),
        ),
        migrations.RunPython(forwards, reverse),
        migrations.RemoveField(
            model_name="course",
            name="playlists_string",
        ),
        migrations.RemoveField(
            model_name="course",
            name="due_dates",
        ),
        migrations.RemoveField(
            model_name="course",
            name="publish_dates",
        ),
    ]
